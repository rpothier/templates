# This is a hello world HOT template just defining a single compute instance
heat_template_version: 2013-05-23

description: >
  HOT template that creates a IPV6 network and subnet.
  Contains just base features to verify base HOT support.

parameters:
  KeyName:
    type: string
    description: Name of an existing key pair to use for the instance
    default: heat_key
  InstanceType:
    type: string
    description: Instance type for the instance to be created
    default: m1.large
  ImageId:
    type: string
    description: ID of the image to use for the instance
  ipv6_ra_mode:
    type: string
    default: "slaac"
  ipv6_address_mode:
    type: string
    default: "slaac"

resources:

  ipv6_net:
    type: OS::Neutron::Net
    properties:
      name: ipv6-net

  ipv6_subnet:
    type: OS::Neutron::Subnet  
    properties:
      cidr: fd01:1::/64
      allocation_pools:
        - start: "fd01:1::8"
          end: "fd01:1::ffff:ffff:ffff:fffe"
      ip_version: 6
      name: ipv6-subnet
      network: { get_resource: ipv6_net }
      ipv6_ra_mode: { get_param: ipv6_ra_mode }
      ipv6_address_mode: { get_param: ipv6_address_mode }
      host_routes: 
        - "destination": fade:1::ffff:ffff:ffff:fffe/128
          "nexthop": fade:1::ffff:ffff:ffff:fffe

  ipv6_port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: ipv6_net }
      fixed_ips:
        - subnet_id: { get_resource: ipv6_subnet }

  my_instance:
    type: OS::Nova::Server
    properties:
      name: tahr-v6
      key_name: { get_param: KeyName }
      image: { get_param: ImageId }
      flavor: { get_param: InstanceType }
      networks:
        - port: { get_resource: ipv6_port }
outputs:

  instance_ip:
    description: The IP address of the deployed instance
    value: { get_attr: [my_instance, addresses] }

